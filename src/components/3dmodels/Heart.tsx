/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: mano1creative (https://sketchfab.com/mano1creative)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-spinning-heart-17cf0dbe4435434eb6e04394fd5bf7ae
Title: Low Poly Spinning Heart!
*/

import * as THREE from 'three'
import { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import {useSpring, animated, easings} from '@react-spring/three'

const Heart =({index = 0, ...props}) => {
  const group = useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/models/crystal_heart.glb')  

  const { heartScale } = useSpring({
      from: { heartScale: 1 },
      to: {heartScale: 1.1},      
      config: { duration: 800 },
      loop: {reverse: true},
      // reset: true,
      easing: easings.easeInOutQuad,      
    });
    
  useFrame(() =>{
    if (group.current) {
        group.current.rotation.y += 0.01;               
    }   
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <animated.group scale={heartScale}>
        <group name="Sketchfab_Scene">
          <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
            <group name="Crystal_Heartfbx" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Object_2">
                <group name="RootNode">
                  <group name="Crystal_Heart" position={[0, 0.839, -0.001]} scale={0.01}>
                    <mesh
                      name="Crystal_Heart_Crystal_Heart_Mat_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Crystal_Heart_Crystal_Heart_Mat_0.geometry}
                      material={materials.Crystal_Heart_Mat}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </animated.group>
    </group>
  )
}

useGLTF.preload('/models/crystal_heart.glb')
export default Heart;