/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three';
import { useEffect, useRef } from 'react';
import { useAnimations, useFBX, useGLTF } from '@react-three/drei';

const Avatar = ({ pose = 'sittingIdle', ...props }) => {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF('./models/human.glb');
  const { animations: sittingIdle } = useFBX('./models/sittingIdle.fbx');
  sittingIdle[0].name = 'sittingIdle';

  const { actions, names } = useAnimations([sittingIdle[0]], group);

  useEffect(() => {
    if (actions[pose]) {
      actions[pose].reset().fadeIn(0.3).play();
    }
    return () => {
      if (actions[pose]) actions[pose].fadeOut(0.3);
    };
  }, [pose, actions, names]);

  return (
    <group ref={group} {...props} dispose={null} castShadow>
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="EyeLeft"
        geometry={(nodes.EyeLeft as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Eye}
        skeleton={(nodes.EyeLeft as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={
          (nodes.EyeLeft as THREE.SkinnedMesh).morphTargetDictionary
        }
        morphTargetInfluences={
          (nodes.EyeLeft as THREE.SkinnedMesh).morphTargetInfluences
        }
        castShadow
        receiveShadow
      />
      <skinnedMesh
        name="EyeRight"
        geometry={(nodes.EyeRight as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Eye}
        skeleton={(nodes.EyeRight as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={
          (nodes.EyeRight as THREE.SkinnedMesh).morphTargetDictionary
        }
        morphTargetInfluences={
          (nodes.EyeRight as THREE.SkinnedMesh).morphTargetInfluences
        }
        castShadow
        receiveShadow
      />
      <skinnedMesh
        name="Wolf3D_Head"
        geometry={(nodes.Wolf3D_Head as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Skin}
        skeleton={(nodes.Wolf3D_Head as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={
          (nodes.Wolf3D_Head as THREE.SkinnedMesh).morphTargetDictionary
        }
        morphTargetInfluences={
          (nodes.Wolf3D_Head as THREE.SkinnedMesh).morphTargetInfluences
        }
        castShadow
        receiveShadow
      />
      <skinnedMesh
        name="Wolf3D_Teeth"
        geometry={(nodes.Wolf3D_Teeth as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Teeth}
        skeleton={(nodes.Wolf3D_Teeth as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={
          (nodes.Wolf3D_Teeth as THREE.SkinnedMesh).morphTargetDictionary
        }
        morphTargetInfluences={
          (nodes.Wolf3D_Teeth as THREE.SkinnedMesh).morphTargetInfluences
        }
        castShadow
        receiveShadow
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Headwear as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Headwear}
        skeleton={(nodes.Wolf3D_Headwear as THREE.SkinnedMesh).skeleton}
        castShadow
        receiveShadow
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Body as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Body}
        skeleton={(nodes.Wolf3D_Body as THREE.SkinnedMesh).skeleton}
        castShadow
        receiveShadow
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Outfit_Bottom as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        skeleton={(nodes.Wolf3D_Outfit_Bottom as THREE.SkinnedMesh).skeleton}
        castShadow
        receiveShadow
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Outfit_Footwear as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        skeleton={(nodes.Wolf3D_Outfit_Footwear as THREE.SkinnedMesh).skeleton}
        castShadow
        receiveShadow
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Outfit_Top as THREE.SkinnedMesh).geometry}
        material={materials.Wolf3D_Outfit_Top}
        skeleton={(nodes.Wolf3D_Outfit_Top as THREE.SkinnedMesh).skeleton}
        castShadow
        receiveShadow
      />
    </group>
  );
};

useGLTF.preload('./models/human.glb');
export default Avatar;
