/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import {RigidBody} from '@react-three/rapier'

const WallShattered =({index = 2, ...props}) => {
  const { nodes, materials } = useGLTF('/models/shatteredWall.glb')
  
  return (
        <group {...props} dispose={null}>
        {Object.keys(nodes).filter((key) => key.startsWith('Cube')).map((key) => (
            <RigidBody key={key} type={index === 3 ? 'dynamic' : 'fixed'}>
                <mesh key={key}
                    castShadow receiveShadow 
                    geometry={nodes[key].geometry} 
                    material={materials['Material.001']}
                    position={nodes[key].position}>
                </mesh>    
            </RigidBody>
        ))}
        </group>
  )
}

useGLTF.preload('/models/shatteredWall.glb')
export default WallShattered;